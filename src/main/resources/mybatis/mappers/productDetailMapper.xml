<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shinhan.productDetail">
	<select id="productInfo" parameterType="com.shinhan.heehee.dto.request.ProductDetailRequestDTO" resultType="com.shinhan.heehee.dto.response.ProdDetailDTO">
	    SELECT 
		    SELL.*, 
		    CATE.*, 
		    TYPE.PROD_NAME,
		    JJIM_CNT.COUNT AS JJIM_CNT,
		    USER_INFO.PROFILE_IMG,
		    USER_INFO.NICK_NAME,
		    USER_INFO.USER_RATING AS USER_RATING,
		    USER_INFO.USER_INTRODUCE,
		    (SELECT COUNT(*) FROM VIEW_LOG WHERE PRODUCT_SEQ = #{PROD_SEQ}) AS VIEW_CNT,
		    (SELECT COUNT(*) FROM JJIM WHERE PRODUCT_SEQ = #{PROD_SEQ}) AS JJIM_CNT,
		    (SELECT COUNT(*) FROM JJIM WHERE PRODUCT_SEQ = #{PROD_SEQ} AND ID = #{userId}) AS specifiedJjimCnt
		FROM 
		    SELL_PRODUCT SELL
		INNER JOIN
		    PRODUCT_TYPE TYPE ON SELL.SELECT_SEQ = TYPE.PRODUCT_SEQ
		INNER JOIN
		    PRODUCT_CATEGORY CATE ON TYPE.PRODUCT_CATE_SEQ = CATE.PRODUCT_CATE_SEQ
		LEFT JOIN
		    (SELECT PRODUCT_SEQ, COUNT(*) AS COUNT FROM JJIM GROUP BY PRODUCT_SEQ) JJIM_CNT ON SELL.PRODUCT_SEQ = JJIM_CNT.PRODUCT_SEQ
		LEFT JOIN
		    (SELECT ID, PROFILE_IMG, NICK_NAME, USER_RATING, USER_INTRODUCE FROM HH_USER) USER_INFO ON SELL.ID = USER_INFO.ID
		WHERE
		    SELL.PRODUCT_SEQ = #{PROD_SEQ}
		AND
			SELL.PRO_STATUS NOT IN('판매중지','판매보류','거래완료')
	</select>
	
	<select id="productImg" parameterType="int" resultType="com.shinhan.heehee.dto.response.ProdDetailImgDTO">
		SELECT IMG.IMG_NAME, IMG.IMG_SEQ
		FROM IMG_FILES IMG, SELL_PRODUCT SELL
		WHERE IMG.TABLE_PK = SELL.PRODUCT_SEQ
        AND IMG.IMG_CATE_SEQ = 2
        AND IMG.TABLE_PK = #{PROD_SEQ}
	</select>
	
	<!-- 귀찮아서 response에 있는 DTO 재활용 했읍니다.. -->
	<select id="prodrecoDetail" parameterType="com.shinhan.heehee.dto.request.ProductDetailRequestDTO" resultType="com.shinhan.heehee.dto.response.ProdDetailRecoDTO">
		SELECT *
		FROM (SELECT IMG.IMG_NAME, SELL.PRODUCT_SEQ
		FROM IMG_FILES IMG
		JOIN SELL_PRODUCT SELL ON IMG.TABLE_PK = SELL.PRODUCT_SEQ
		WHERE IMG.IMG_CATE_SEQ = 2
		AND CREATE_DATE >= SYSDATE - 30
		AND SELL.PRO_STATUS NOT IN('판매중지','판매보류','거래완료')
		ORDER BY DBMS_RANDOM.RANDOM)
		WHERE ROWNUM &lt; 6
		AND PRODUCT_SEQ != #{PROD_SEQ}
	</select>
	
	<select id="prodRank" resultType="com.shinhan.heehee.dto.response.MainProdRankDTO">
		SELECT MIN(IMG.IMG_SEQ) AS IMG_SEQ, IMG_NAME, SELL.ARTICLE_TITLE,
		    SELL.INTRODUCE, SELL.PRODUCT_PRICE, SELL.PRODUCT_SEQ
		FROM SELL_PRODUCT SELL
		INNER JOIN IMG_FILES IMG ON SELL.PRODUCT_SEQ = IMG.TABLE_PK
		WHERE IMG.IMG_CATE_SEQ = 2
        AND ROWNUM <![CDATA[<]]> 13
        AND SELL.PRO_STATUS NOT IN('판매중지','판매보류','거래완료')
		GROUP BY IMG.IMG_NAME, SELL.ARTICLE_TITLE, SELL.INTRODUCE, SELL.PRODUCT_PRICE, SELL.PRODUCT_SEQ
		ORDER BY IMG_SEQ
	</select>
	
	<select id="prodreco" parameterType="String" resultType="com.shinhan.heehee.dto.response.MainProdRecoDTO">
		SELECT MIN(IMG.IMG_SEQ) AS IMG_SEQ, IMG_NAME, SELL.ARTICLE_TITLE,
            SELL.PRODUCT_PRICE, SELL.CREATE_DATE, SELL.PRODUCT_SEQ, SELL.PRODUCT_SEQ,
            CASE WHEN ROUND((SYSDATE - CREATE_DATE)*24*60*60) <![CDATA[<]]> 60 THEN ROUND((SYSDATE - CREATE_DATE)*24*60*60) || '초전'
            WHEN ROUND((SYSDATE - CREATE_DATE)*24*60*60) <![CDATA[<]]> 3600 THEN ROUND((SYSDATE - CREATE_DATE)*24*60) || '분전'
            WHEN ROUND((SYSDATE - CREATE_DATE)*24*60*60) <![CDATA[<]]> 86400 THEN ROUND((SYSDATE - CREATE_DATE)*24) || '시간전'
            ELSE TRUNC(SYSDATE - CREATE_DATE) || '일전'
        END AGO_TIME
        FROM SELL_PRODUCT SELL
        INNER JOIN IMG_FILES IMG ON SELL.PRODUCT_SEQ = IMG.TABLE_PK
        WHERE IMG.IMG_CATE_SEQ = 2
        AND ROWNUM <![CDATA[<]]> 35
        AND SELL.PRO_STATUS NOT IN('판매중지','판매보류','거래완료')
        GROUP BY IMG.IMG_NAME, SELL.ARTICLE_TITLE, SELL.PRODUCT_PRICE, SELL.CREATE_DATE, SELL.PRODUCT_SEQ
        ORDER BY DBMS_RANDOM.RANDOM
	</select>
	
	<select id="recently" resultType="com.shinhan.heehee.dto.response.MainProdRecentlyDTO">
		SELECT MIN(IMG.IMG_SEQ) AS IMG_SEQ, IMG_NAME, SELL.ARTICLE_TITLE,
            SELL.PRODUCT_PRICE, SELL.CREATE_DATE, SELL.PRODUCT_SEQ, SELL.PRODUCT_SEQ,
            CASE WHEN ROUND((SYSDATE - CREATE_DATE)*24*60*60) <![CDATA[<]]> 60 THEN ROUND((SYSDATE - CREATE_DATE)*24*60*60) || '초전'
            WHEN ROUND((SYSDATE - CREATE_DATE)*24*60*60) <![CDATA[<]]> 3600 THEN ROUND((SYSDATE - CREATE_DATE)*24*60) || '분전'
            WHEN ROUND((SYSDATE - CREATE_DATE)*24*60*60) <![CDATA[<]]> 86400 THEN ROUND((SYSDATE - CREATE_DATE)*24) || '시간전'
            ELSE TRUNC(SYSDATE - CREATE_DATE) || '일전'
        END AGO_TIME
        FROM SELL_PRODUCT SELL
        INNER JOIN IMG_FILES IMG ON SELL.PRODUCT_SEQ = IMG.TABLE_PK
        WHERE IMG.IMG_CATE_SEQ = 2
        AND SELL.PRO_STATUS NOT IN('판매중지','판매보류','거래완료')
        AND ROWNUM <![CDATA[<]]> 35
        GROUP BY IMG.IMG_NAME, SELL.ARTICLE_TITLE, SELL.PRODUCT_PRICE, SELL.CREATE_DATE, SELL.PRODUCT_SEQ
        ORDER BY (SYSDATE - CREATE_DATE)
	</select>
	
	<select id="sellerInfo" parameterType="String" resultType="com.shinhan.heehee.dto.response.SellerProfileDTO">
		SELECT HH_USER.*, ROUND(SYSDATE - CREATE_DATE) AS CREATE_DIFF
		FROM HH_USER
		WHERE ID = #{id}
	</select>
	
	<select id="sellerprod" parameterType="String" resultType="com.shinhan.heehee.dto.response.SellerProdDTO">
	   SELECT *
	   FROM SELL_PRODUCT SELL, IMG_FILES IMG
	   WHERE SELL.PRODUCT_SEQ = IMG.TABLE_PK
	   AND SELL.ID = #{id}
	   AND IMG_CATE_SEQ = 2
	   AND IMG.IMG_SEQ IN (SELECT MIN(IMG_SEQ)
	                    FROM IMG_FILES
	                    WHERE IMG_CATE_SEQ = 2
	                    GROUP BY TABLE_PK)
	   <!-- AND ROWNUM <![CDATA[<]]> 6 -->
	   ORDER BY DBMS_RANDOM.RANDOM
	</select>
	
	<select id="dealComplete" parameterType="String" resultType="com.shinhan.heehee.dto.response.SellerProfileDTO">
		SELECT COUNT(*) as counting
		FROM (
		SELECT AUC.SELLER_ID
		  FROM AUC_PRODUCT AUC, DEAL_HISTORY DEAL
		 WHERE AUC.PRODUCT_SEQ = DEAL.AUC_SEQ
		 AND DEAL.P_CHECK IS NOT NULL
		 AND DEAL.S_CHECK IS NOT NULL
		 UNION ALL
		 SELECT SELL.ID
		   FROM SELL_PRODUCT SELL, DEAL_HISTORY DEAL
		WHERE SELL.PRODUCT_SEQ = DEAL.SELL_SEQ
		 AND DEAL.P_CHECK IS NOT NULL
		 AND DEAL.S_CHECK IS NOT NULL)
		WHERE SELLER_ID = #{id}
	</select>
	
	<select id="productModify" parameterType="int" resultType="com.shinhan.heehee.dto.response.ProdDetailImgDTO">
		SELECT SELL.PRODUCT_SEQ, MIN(IMG.IMG_NAME) AS IMG_NAME,
        SELL.INTRODUCE, SELL.PRODUCT_PRICE
		FROM SELL_PRODUCT SELL
		INNER JOIN IMG_FILES IMG ON SELL.PRODUCT_SEQ = IMG.TABLE_PK
		WHERE IMG.IMG_CATE_SEQ = 2
		GROUP BY SELL.PRODUCT_SEQ, SELL.INTRODUCE, SELL.PRODUCT_PRICE
	</select>
	
	<select id="getCategory" resultType="com.shinhan.heehee.dto.response.ProductCategoryDTO">
		SELECT CATEGORY, MIN(PRODUCT_CATE_SEQ) AS MIN_CATE
		FROM PRODUCT_CATEGORY
		GROUP BY CATEGORY
		ORDER BY MIN_CATE ASC
	</select>
	
	<select id="getDetailCategory" parameterType="String" resultType="com.shinhan.heehee.dto.response.ProductCategoryDTO">
		SELECT PRODUCT_CATE_SEQ, DETAIL_CATEGORY FROM PRODUCT_CATEGORY WHERE CATEGORY = #{category}
	</select>
	
	<delete id="deleteImgFiles" parameterType="com.shinhan.heehee.dto.request.ImageFileDTO">
		DELETE FROM IMG_FILES
		WHERE IMG_CATE_SEQ = 2
		AND TABLE_PK = #{tablePk}
		AND IMG_SEQ = #{imgSeq}
	</delete>
	
	<insert id="insertImgFile" parameterType="com.shinhan.heehee.dto.request.ImageFileDTO">
		INSERT INTO IMG_FILES VALUES(SEQ_IMG_FILES.nextval, #{imgName},#{prodSeq},2,#{userId})
	</insert>
	
	<insert id="insertProduct" parameterType="com.shinhan.heehee.dto.request.ProductModifyRequestDTO">
		INSERT INTO SELL_PRODUCT
		VALUES (SEQ_SELL_PROD.nextval, #{articleTitle}, #{productPrice}, #{introduce}, #{state}, '판매중', #{deal}, #{dCharge}, 5, #{userId}, SYSDATE, NULL)
	</insert>
	
	<insert id="insertProductName" parameterType="com.shinhan.heehee.dto.request.ProductModifyRequestDTO">
		INSERT INTO PRODUCT_TYPE
		VALUES (5, #{productName}, )
	</insert>
	
	<update id="updateProduct" parameterType="com.shinhan.heehee.dto.request.ProductModifyRequestDTO">
		UPDATE SELL_PRODUCT
		SET ARTICLE_TITLE = #{articleTitle}
		, PRODUCT_PRICE = #{productPrice}
		, INTRODUCE = #{introduce}
		, CONDITION = #{state}
		, DEAL = #{deal}
		, D_CHARGE = #{dCharge}
		WHERE PRODUCT_SEQ = #{prodSeq}
	</update>
	
	<select id="cateList" resultType="com.shinhan.heehee.dto.response.ProductCategoryDTO">
		SELECT *
	  	FROM PRODUCT_CATEGORY
	</select>
	
	<select id="mainCateList" resultType="com.shinhan.heehee.dto.response.CategoryDTO">
		SELECT CATEGORY
		FROM PRODUCT_CATEGORY
		GROUP BY CATEGORY
	</select>
	
<!-- 	<select id="subCateList" parameterType="String" resultType="String">
		SELECT *
  		FROM PRODUCT_CATEGORY
		WHERE CATEGORY = #{mainCate}
	</select> -->
	
	<update id="proStatusSelling" parameterType="int">
		UPDATE SELL_PRODUCT
		SET PRO_STATUS = '판매중'
        WHERE PRODUCT_SEQ = #{productSeq}
	</update>
	
	<update id="proStatusReserve" parameterType="int">
		UPDATE SELL_PRODUCT
		SET PRO_STATUS = '예약중'
        WHERE PRODUCT_SEQ = #{productSeq}
	</update>
	
	<update id="proStatusPutoff" parameterType="com.shinhan.heehee.dto.request.ProdDetailDTO">
		UPDATE SELL_PRODUCT
		SET PRO_STATUS = '판매보류'
        WHERE PRODUCT_SEQ = #{productSeq}
	</update>
	
	<delete id="proStatusDelete" parameterType="com.shinhan.heehee.dto.request.ProdDetailDTO">
		DELETE FROM SELL_PRODUCT
		WHERE PRODUCT_SEQ = #{productSeq}
	</delete>
	
	<insert id="insertViewLog" parameterType="com.shinhan.heehee.dto.request.ViewLogDTO">
		INSERT INTO VIEW_LOG VALUES (#{productSeq}, #{ID}, SYSDATE)
	</insert>
	
	
	<!-- <insert id="insertRecently" parameterType="com.shinhan.heehee.dto.request.RecentlyDTO">
		INSERT INTO RECENTLY VALUES (#{productSeq}, #{ID})
	</insert> -->
	
	
	<select id="selectRecently" parameterType="String" resultType="com.shinhan.heehee.dto.response.ProdDetailImgDTO">
		SELECT *
		FROM (SELECT *
		FROM (
		SELECT VLOG.PRODUCT_SEQ, IMG.IMG_SEQ, IMG.IMG_NAME, MAX(CREATE_DATE) CRE_DATE
		  FROM VIEW_LOG VLOG, IMG_FILES IMG
		 WHERE VLOG.PRODUCT_SEQ = IMG.TABLE_PK
		   AND VLOG.ID = #{userId}
		   AND IMG.IMG_CATE_SEQ = 2
		   AND IMG.IMG_SEQ = (SELECT MIN(IMG_SEQ) FROM IMG_FILES WHERE TABLE_PK = VLOG.PRODUCT_SEQ AND IMG_CATE_SEQ = 2)
		 GROUP BY VLOG.PRODUCT_SEQ, IMG.IMG_SEQ, IMG.IMG_NAME)
		 ORDER BY CRE_DATE DESC)
		 WHERE ROWNUM <![CDATA[<]]> 3
	</select>
	
	
	<insert id="insertJjim" parameterType="com.shinhan.heehee.dto.request.JjimDTO">
		INSERT INTO JJIM VALUES (#{productSeq}, #{id})
	</insert>
	
	<delete id="deleteJjim" parameterType="com.shinhan.heehee.dto.request.JjimDTO">
		DELETE FROM JJIM
		WHERE product_seq = #{productSeq}
		AND ID = #{id}
	</delete>
	
	<select id="selectJjim" parameterType="int" resultType="int">
		SELECT COUNT(*) AS JJIM_CNT
		FROM JJIM
		WHERE PRODUCT_SEQ = #{productSeq}
	</select>
</mapper>